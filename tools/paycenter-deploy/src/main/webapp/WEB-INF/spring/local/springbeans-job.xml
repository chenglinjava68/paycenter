<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:reg="http://www.dangdang.com/schema/ddframe/reg"
       xmlns:job="http://www.dangdang.com/schema/ddframe/job"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.dangdang.com/schema/ddframe/reg
                        http://www.dangdang.com/schema/ddframe/reg/reg.xsd
                        http://www.dangdang.com/schema/ddframe/job
                        http://www.dangdang.com/schema/ddframe/job/job.xsd
                        ">
    <!--<context:property-placeholder location="/WEB-INF/env/env.properties" ignore-unresolvable="true"/>-->


    <reg:zookeeper id="regCenter" serverLists="${zk.url.schedule}"  namespace="${app_name}-job" baseSleepTimeMilliseconds="1000" maxSleepTimeMilliseconds="3000" maxRetries="3" />

    <job:bean id="refundCheckBackLowAmountSchedule" class="com.qccr.paycenter.biz.task.schedule.refund.RefundCheckBackLowAmountSchedule" regCenter="regCenter" cron="0 0/30 * * * ?" shardingTotalCount="5" shardingItemParameters="0=A,1=B,2=B,3=C,4=D" />
    <job:bean id="refundCheckBackHighAmountSchedule" class="com.qccr.paycenter.biz.task.schedule.refund.RefundCheckBackHighAmountSchedule" regCenter="regCenter" cron="0 0/30 * * * ?" shardingTotalCount="5" shardingItemParameters="0=A,1=B,2=B,3=C,4=D" />
    <job:bean id="payTimeoutSchedule" class="com.qccr.paycenter.biz.task.schedule.pay.PayTimeoutSchedule" regCenter="regCenter" cron="0 0/10 * * * ?" shardingTotalCount="5" shardingItemParameters="0=A,1=B,2=B,3=C,4=D" />
    <job:bean id="authTokenRefreshSchedule" class="com.qccr.paycenter.biz.task.schedule.pay.AuthTokenRefreshSchedule" regCenter="regCenter" cron="0 0 1 * * ?" shardingTotalCount="5" shardingItemParameters="0=A,1=B,2=B,3=C,4=D" />
   <job:bean id="payCancelShedule" class="com.qccr.paycenter.biz.task.schedule.pay.PayCancelShedule" regCenter="regCenter" cron="0 0/10 * * * ?" shardingTotalCount="5" shardingItemParameters="0=A,1=B,2=B,3=C,4=D" />
    <!--<job:bean id="authTokenRefreshSchedule" class="com.qccr.paycenter.biz.task.schedule.pay.AuthTokenRefreshSchedule" regCenter="regCenter" cron="0/15 * * * * ?" shardingTotalCount="5" shardingItemParameters="0=A,1=B,2=B,3=C,4=D" />-->
    <!--
    <bean id="regCenter" class="com.dangdang.ddframe.reg.zookeeper.ZookeeperRegistryCenter" init-method="init">
        <constructor-arg>
            <bean class="com.dangdang.ddframe.reg.zookeeper.ZookeeperConfiguration">
                <property name="serverLists" value="${zk.url}" />
                <property name="namespace" value="${app_name}-job" />
                <property name="baseSleepTimeMilliseconds" value="1000" />
                <property name="maxSleepTimeMilliseconds" value="3000" />
                <property name="maxRetries" value="3" />
            </bean>
        </constructor-arg>
    </bean>

    <bean id="payTimeoutSchedule" class="com.qccr.paycenter.biz.task.schedule.DataFlowSchedule" >
        <constructor-arg name="jobOpen" value="true" />
        <constructor-arg ref="regCenter" />
        <constructor-arg>
            <bean class="com.dangdang.ddframe.job.api.JobConfiguration">
                <constructor-arg name="jobName" value="payTimeoutSchedule" />
                <constructor-arg name="jobClass" value="com.qccr.paycenter.biz.task.schedule.pay.PayTimeoutSchedule" />
                <constructor-arg name="shardingTotalCount" value="5" />
                <constructor-arg name="cron" value="0 0/1 * * * ?" />
                <property name="shardingItemParameters" value="0=A,1=B,2=B,3=C,4=D" />
            </bean>
        </constructor-arg>
    </bean>
    -->
</beans>